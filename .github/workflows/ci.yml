name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - ".github/workflows/**"
      - "**/*.md"
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite
      MAIL_MAILER: array
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, dom, fileinfo, intl, curl, sqlite3, pdo_sqlite
          coverage: xdebug
          tools: composer

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install Node dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Prepare app env
        run: |
          cp .env.example .env || true
          mkdir -p database
          php -r "file_put_contents('database/database.sqlite','');"
          php artisan key:generate
          php artisan config:clear

      - name: Run Pint
        run: vendor/bin/pint -v

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse -c phpstan.neon.dist --no-progress --memory-limit=1G

      - name: Run PHPUnit with coverage
        run: |
          mkdir -p coverage
          php artisan test --coverage-clover coverage/clover.xml --coverage-text --colors=always

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

      - name: Upload to Codecov (optional)
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          files: coverage/clover.xml
          token: ${{ secrets.CODECOV_TOKEN }}
